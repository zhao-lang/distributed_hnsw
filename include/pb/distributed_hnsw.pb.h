// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: distributed_hnsw.proto

#ifndef PROTOBUF_distributed_5fhnsw_2eproto__INCLUDED
#define PROTOBUF_distributed_5fhnsw_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_distributed_5fhnsw_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsJoinRequestImpl();
void InitDefaultsJoinRequest();
void InitDefaultsJoinResponseImpl();
void InitDefaultsJoinResponse();
void InitDefaultsNodeImpl();
void InitDefaultsNode();
void InitDefaultsSearchResultImpl();
void InitDefaultsSearchResult();
void InitDefaultsEmptyImpl();
void InitDefaultsEmpty();
inline void InitDefaults() {
  InitDefaultsJoinRequest();
  InitDefaultsJoinResponse();
  InitDefaultsNode();
  InitDefaultsSearchResult();
  InitDefaultsEmpty();
}
}  // namespace protobuf_distributed_5fhnsw_2eproto
class Empty;
class EmptyDefaultTypeInternal;
extern EmptyDefaultTypeInternal _Empty_default_instance_;
class JoinRequest;
class JoinRequestDefaultTypeInternal;
extern JoinRequestDefaultTypeInternal _JoinRequest_default_instance_;
class JoinResponse;
class JoinResponseDefaultTypeInternal;
extern JoinResponseDefaultTypeInternal _JoinResponse_default_instance_;
class Node;
class NodeDefaultTypeInternal;
extern NodeDefaultTypeInternal _Node_default_instance_;
class SearchResult;
class SearchResultDefaultTypeInternal;
extern SearchResultDefaultTypeInternal _SearchResult_default_instance_;

// ===================================================================

class JoinRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:JoinRequest) */ {
 public:
  JoinRequest();
  virtual ~JoinRequest();

  JoinRequest(const JoinRequest& from);

  inline JoinRequest& operator=(const JoinRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JoinRequest(JoinRequest&& from) noexcept
    : JoinRequest() {
    *this = ::std::move(from);
  }

  inline JoinRequest& operator=(JoinRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JoinRequest* internal_default_instance() {
    return reinterpret_cast<const JoinRequest*>(
               &_JoinRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(JoinRequest* other);
  friend void swap(JoinRequest& a, JoinRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JoinRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  JoinRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JoinRequest& from);
  void MergeFrom(const JoinRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JoinRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string worker_id = 1;
  void clear_worker_id();
  static const int kWorkerIdFieldNumber = 1;
  const ::std::string& worker_id() const;
  void set_worker_id(const ::std::string& value);
  #if LANG_CXX11
  void set_worker_id(::std::string&& value);
  #endif
  void set_worker_id(const char* value);
  void set_worker_id(const char* value, size_t size);
  ::std::string* mutable_worker_id();
  ::std::string* release_worker_id();
  void set_allocated_worker_id(::std::string* worker_id);

  // @@protoc_insertion_point(class_scope:JoinRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr worker_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_distributed_5fhnsw_2eproto::TableStruct;
  friend void ::protobuf_distributed_5fhnsw_2eproto::InitDefaultsJoinRequestImpl();
};
// -------------------------------------------------------------------

class JoinResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:JoinResponse) */ {
 public:
  JoinResponse();
  virtual ~JoinResponse();

  JoinResponse(const JoinResponse& from);

  inline JoinResponse& operator=(const JoinResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JoinResponse(JoinResponse&& from) noexcept
    : JoinResponse() {
    *this = ::std::move(from);
  }

  inline JoinResponse& operator=(JoinResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JoinResponse* internal_default_instance() {
    return reinterpret_cast<const JoinResponse*>(
               &_JoinResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(JoinResponse* other);
  friend void swap(JoinResponse& a, JoinResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JoinResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  JoinResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JoinResponse& from);
  void MergeFrom(const JoinResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JoinResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string worker_id = 1;
  void clear_worker_id();
  static const int kWorkerIdFieldNumber = 1;
  const ::std::string& worker_id() const;
  void set_worker_id(const ::std::string& value);
  #if LANG_CXX11
  void set_worker_id(::std::string&& value);
  #endif
  void set_worker_id(const char* value);
  void set_worker_id(const char* value, size_t size);
  ::std::string* mutable_worker_id();
  ::std::string* release_worker_id();
  void set_allocated_worker_id(::std::string* worker_id);

  // @@protoc_insertion_point(class_scope:JoinResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr worker_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_distributed_5fhnsw_2eproto::TableStruct;
  friend void ::protobuf_distributed_5fhnsw_2eproto::InitDefaultsJoinResponseImpl();
};
// -------------------------------------------------------------------

class Node : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Node) */ {
 public:
  Node();
  virtual ~Node();

  Node(const Node& from);

  inline Node& operator=(const Node& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Node(Node&& from) noexcept
    : Node() {
    *this = ::std::move(from);
  }

  inline Node& operator=(Node&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Node& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Node* internal_default_instance() {
    return reinterpret_cast<const Node*>(
               &_Node_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Node* other);
  friend void swap(Node& a, Node& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Node* New() const PROTOBUF_FINAL { return New(NULL); }

  Node* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Node& from);
  void MergeFrom(const Node& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Node* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float value = 2;
  int value_size() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  float value(int index) const;
  void set_value(int index, float value);
  void add_value(float value);
  const ::google::protobuf::RepeatedField< float >&
      value() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_value();

  // int64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Node)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > value_;
  mutable int _value_cached_byte_size_;
  ::google::protobuf::int64 id_;
  mutable int _cached_size_;
  friend struct ::protobuf_distributed_5fhnsw_2eproto::TableStruct;
  friend void ::protobuf_distributed_5fhnsw_2eproto::InitDefaultsNodeImpl();
};
// -------------------------------------------------------------------

class SearchResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SearchResult) */ {
 public:
  SearchResult();
  virtual ~SearchResult();

  SearchResult(const SearchResult& from);

  inline SearchResult& operator=(const SearchResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SearchResult(SearchResult&& from) noexcept
    : SearchResult() {
    *this = ::std::move(from);
  }

  inline SearchResult& operator=(SearchResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SearchResult* internal_default_instance() {
    return reinterpret_cast<const SearchResult*>(
               &_SearchResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(SearchResult* other);
  friend void swap(SearchResult& a, SearchResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SearchResult* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchResult& from);
  void MergeFrom(const SearchResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Node nodes = 1;
  int nodes_size() const;
  void clear_nodes();
  static const int kNodesFieldNumber = 1;
  const ::Node& nodes(int index) const;
  ::Node* mutable_nodes(int index);
  ::Node* add_nodes();
  ::google::protobuf::RepeatedPtrField< ::Node >*
      mutable_nodes();
  const ::google::protobuf::RepeatedPtrField< ::Node >&
      nodes() const;

  // @@protoc_insertion_point(class_scope:SearchResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Node > nodes_;
  mutable int _cached_size_;
  friend struct ::protobuf_distributed_5fhnsw_2eproto::TableStruct;
  friend void ::protobuf_distributed_5fhnsw_2eproto::InitDefaultsSearchResultImpl();
};
// -------------------------------------------------------------------

class Empty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Empty) */ {
 public:
  Empty();
  virtual ~Empty();

  Empty(const Empty& from);

  inline Empty& operator=(const Empty& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Empty(Empty&& from) noexcept
    : Empty() {
    *this = ::std::move(from);
  }

  inline Empty& operator=(Empty&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Empty& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Empty* internal_default_instance() {
    return reinterpret_cast<const Empty*>(
               &_Empty_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(Empty* other);
  friend void swap(Empty& a, Empty& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Empty* New() const PROTOBUF_FINAL { return New(NULL); }

  Empty* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Empty& from);
  void MergeFrom(const Empty& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Empty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Empty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_distributed_5fhnsw_2eproto::TableStruct;
  friend void ::protobuf_distributed_5fhnsw_2eproto::InitDefaultsEmptyImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// JoinRequest

// string worker_id = 1;
inline void JoinRequest::clear_worker_id() {
  worker_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& JoinRequest::worker_id() const {
  // @@protoc_insertion_point(field_get:JoinRequest.worker_id)
  return worker_id_.GetNoArena();
}
inline void JoinRequest::set_worker_id(const ::std::string& value) {
  
  worker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:JoinRequest.worker_id)
}
#if LANG_CXX11
inline void JoinRequest::set_worker_id(::std::string&& value) {
  
  worker_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:JoinRequest.worker_id)
}
#endif
inline void JoinRequest::set_worker_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  worker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:JoinRequest.worker_id)
}
inline void JoinRequest::set_worker_id(const char* value, size_t size) {
  
  worker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:JoinRequest.worker_id)
}
inline ::std::string* JoinRequest::mutable_worker_id() {
  
  // @@protoc_insertion_point(field_mutable:JoinRequest.worker_id)
  return worker_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JoinRequest::release_worker_id() {
  // @@protoc_insertion_point(field_release:JoinRequest.worker_id)
  
  return worker_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JoinRequest::set_allocated_worker_id(::std::string* worker_id) {
  if (worker_id != NULL) {
    
  } else {
    
  }
  worker_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), worker_id);
  // @@protoc_insertion_point(field_set_allocated:JoinRequest.worker_id)
}

// -------------------------------------------------------------------

// JoinResponse

// string worker_id = 1;
inline void JoinResponse::clear_worker_id() {
  worker_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& JoinResponse::worker_id() const {
  // @@protoc_insertion_point(field_get:JoinResponse.worker_id)
  return worker_id_.GetNoArena();
}
inline void JoinResponse::set_worker_id(const ::std::string& value) {
  
  worker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:JoinResponse.worker_id)
}
#if LANG_CXX11
inline void JoinResponse::set_worker_id(::std::string&& value) {
  
  worker_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:JoinResponse.worker_id)
}
#endif
inline void JoinResponse::set_worker_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  worker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:JoinResponse.worker_id)
}
inline void JoinResponse::set_worker_id(const char* value, size_t size) {
  
  worker_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:JoinResponse.worker_id)
}
inline ::std::string* JoinResponse::mutable_worker_id() {
  
  // @@protoc_insertion_point(field_mutable:JoinResponse.worker_id)
  return worker_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JoinResponse::release_worker_id() {
  // @@protoc_insertion_point(field_release:JoinResponse.worker_id)
  
  return worker_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JoinResponse::set_allocated_worker_id(::std::string* worker_id) {
  if (worker_id != NULL) {
    
  } else {
    
  }
  worker_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), worker_id);
  // @@protoc_insertion_point(field_set_allocated:JoinResponse.worker_id)
}

// -------------------------------------------------------------------

// Node

// int64 id = 1;
inline void Node::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Node::id() const {
  // @@protoc_insertion_point(field_get:Node.id)
  return id_;
}
inline void Node::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Node.id)
}

// repeated float value = 2;
inline int Node::value_size() const {
  return value_.size();
}
inline void Node::clear_value() {
  value_.Clear();
}
inline float Node::value(int index) const {
  // @@protoc_insertion_point(field_get:Node.value)
  return value_.Get(index);
}
inline void Node::set_value(int index, float value) {
  value_.Set(index, value);
  // @@protoc_insertion_point(field_set:Node.value)
}
inline void Node::add_value(float value) {
  value_.Add(value);
  // @@protoc_insertion_point(field_add:Node.value)
}
inline const ::google::protobuf::RepeatedField< float >&
Node::value() const {
  // @@protoc_insertion_point(field_list:Node.value)
  return value_;
}
inline ::google::protobuf::RepeatedField< float >*
Node::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:Node.value)
  return &value_;
}

// -------------------------------------------------------------------

// SearchResult

// repeated .Node nodes = 1;
inline int SearchResult::nodes_size() const {
  return nodes_.size();
}
inline void SearchResult::clear_nodes() {
  nodes_.Clear();
}
inline const ::Node& SearchResult::nodes(int index) const {
  // @@protoc_insertion_point(field_get:SearchResult.nodes)
  return nodes_.Get(index);
}
inline ::Node* SearchResult::mutable_nodes(int index) {
  // @@protoc_insertion_point(field_mutable:SearchResult.nodes)
  return nodes_.Mutable(index);
}
inline ::Node* SearchResult::add_nodes() {
  // @@protoc_insertion_point(field_add:SearchResult.nodes)
  return nodes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Node >*
SearchResult::mutable_nodes() {
  // @@protoc_insertion_point(field_mutable_list:SearchResult.nodes)
  return &nodes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Node >&
SearchResult::nodes() const {
  // @@protoc_insertion_point(field_list:SearchResult.nodes)
  return nodes_;
}

// -------------------------------------------------------------------

// Empty

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_distributed_5fhnsw_2eproto__INCLUDED
